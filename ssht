#!/bin/bash

#
# CONFIG
###################
NO_KEY="-o PubKeyAuthentication=no"
ANON_HOST="-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
USAGE_TITLE="SSH Toolkit"
SSH=$( which ssh )
SCP=$( which scp )
SSHFS=$( which sshfs )
UNMOUNT=$( which fusermount )
PORT=22

#
# USE REQUIRE
###################
source $( dirname -- "$0" )/lib/require.sh

#
# COMMANDS
###################
COMMANDS=(
  SSH
  SCP
  SSHFS
)

#
# PARAMETERS
###################
# FORMAT: (equals separator)
#  flag(s)     - Pipe separated list of flags
#  type        - Type of action, typically boolean or string
#  target      - Name of the target variable, array, etc
#  description - Raw description of the feature
PARAMS=(
  "-a|--anonymous=_ANONYMOUS=boolean=Support anonymous hosts, ignore host checks."
  "-n|--no-key=_NO_PUBKEY=boolean=Disable public key based authentication methods."
  "-p|--port=PORT=string=Specify a custom port to use for connections."
)

#
# ACTIONS
###################
# FORMAT: (equals separator)
#  keyword(s)  - Pipe separated list of action keywords that trigger it
#  type        - Type of action, typically function/method
#  target      - Name of the target method, variable, etc
#  description - Raw description of the action
ACTIONS=(
  "a|add=function=add_host=Define a new host record."
  "c|connect=function=connect=Connect to a given host."
  "m|mount=function=mount=Mount a target host at the defined path."
  "u|unmount=function=unmount=Unmount an existing host mount."
  "r|remount=function=remount=Remount an existing host mount."
)

#
# HOSTS
###################
HOSTS=(
  cfz-nas-1=root@10.10.15.20
  cfz-nas-12=nas-12:2222
  grapevine1=core@10.10.255.1
  grapevine2=core@10.10.255.2
  peach=core@10.10.15.201
  grape=core@10.10.15.211
  melon=core@10.10.15.221
  peach-comfreeze=comfreeze@10.10.15.201
  peach-impekable=impekable@10.10.15.201
)

##sshfs ${OPTS} comfreeze@10.10.15.201:'/home/comfreeze' ~/peach
##sshfs ${OPTS} impekable@10.10.15.201:'/home/impekable' ~/peach-impekable
#
# MOUNTS
###################
MOUNTS=(
  cfz-nas-1='/data/'
  cfz-nas-12='/'
  grapevine1='.'
  grapevine2='.'
  peach='.'
  grape='.'
  melon='.'
  peach-comfreeze='/home/comfreeze'
  peach-impekable='/home/impekable'
)

#
# LIBRARIES
###################
require verbosity $*
require array
require string
require params
require actions
require utils

#
# CUSTOM METHODS
###################
_apply_options () {
  dump_method $*
  apply_options COMMANDS $*;
}

add_host () {
  dump_method $*

}

usage_add_host () {
  dump_method $*
  echo "Usage add host"
}

connect () {
  dump_method $*
  for TARGET in "$@"; do
    HOST=$( filter_array HOSTS ${TARGET} )
    if [ ! -z "${HOST}" ]; then
      echo "Connecting to ${TARGET} (${HOST})"
      OPTS=( $( explode_array ":" ${HOST} ) )
      if (( "${#OPTS[@]}" >= "2" )); then
        HOST="${OPTS[0]}"; _PORT="${OPTS[1]}";
        [ ! -z "${_PORT}" ] && prepend_option HOST "-p ${_PORT}"
      fi
      apply_option SSH "$( verboses )"
      verbose 0 ${SSH} ${HOST}
      ${SSH} ${HOST}
    fi
  done
}

usage_connect () {
  dump_method $*
  echo "Usage connecting"
}

mount () {
  dump_method $*
  for TARGET in "$@"; do
    HOST=$( filter_array HOSTS ${TARGET} )
    MOUNT=$( filter_array MOUNTS ${TARGET} )
    if [ ! -z "${HOST}" ]; then
      echo "Mounting ${HOST} => ~/${TARGET}"
      OPTS=( $( explode_array ":" ${HOST} ) )
      if (( "${#OPTS[@]}" >= "2" )); then
        HOST="${OPTS[0]}"; _PORT="${OPTS[1]}";
        [ ! -z "${_PORT}" ] && prepend_option HOST "-o port=${_PORT}"
      fi
      verb 2 prepend_option HOST "-d -o sshfs_debug -o workaround=all"
      verb 1 apply_option SSHFS "-o ssh_command=\"${SSH} $( verboses )\" "
      verbose 1 ${SSHFS} ${HOST}:${MOUNT} ~/${TARGET}
      ${SSHFS} ${HOST}:${MOUNT} ~/${TARGET}
    fi
  done
}

usage_mount () {
  dump_method $*
  echo "Usage mounting"
}

unmount () {
  dump_method $*
  for TARGET in "$@"; do
    MOUNT=$( filter_array MOUNTS ${TARGET} )
    if [ ! -z "${MOUNT}" ]; then
      verbose 0 "Unmounting ~/${TARGET}"
      verbose 1 ${UNMOUNT} -u ~/${TARGET}
      ${UNMOUNT} -u ~/${TARGET}
    fi
  done
}

usage_unmount () {
  dump_method $*
  echo "Usage unmounting"
}

remount () {
  dump_method $*
  echo "Unmounting"
}

usage_remount () {
  dump_method $*
  echo "Usage remounting"
}

#dump_assoc_array 1 MOUNTS
#verbose 0 $( filter_array MOUNTS melon grape )
#TARGETS=$( filter_array MOUNTS $@ )
#dump_array TARGETS

#
# LOGIC
###################
require help $*
config_params PARAMS
config_actions ACTIONS
eval_params $*

#
# APPLY OPTIONS
###################
[[ "${_ANONYMOUS}" = "true" ]] && _apply_options ${ANON_HOST}
[[ "${_NO_PUBKEY}" = "true" ]] && _apply_options ${NO_KEY}

eval_actions $*
