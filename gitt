#!/usr/bin/env bash

#
# Perform an operation against a dependency
#
dep_operation () {
  dump_method $*
  target_dir=$1; shift;   # Target directory of operation (from base)
  repo_name=$1;  shift;   # Repository name, as shown in URL
  op=$*;                  # Operation to perform
  [[ "${_FAKE}" != true ]] && cd $target_dir;
  verbose 1 $op
  $op
}
export -f dep_operation
#
# Pull or update target dependencies
#
pull_or_update () {
  dump_method $*
  dir=$1; shift; repo=$1; shift
  dir_not_exists "$dir" ${_CONFIG_GITCMD} clone ${_CONFIG_GIT_BASE}${repo}.git ${dir}
  dir_exists "$dir" gitcmd "$dir" "$repo" pull --ff-only
}
export -f pull_or_update
#
# Print status of target dependencies
#
status () {
  verbose 3 "status $*"
  dir=$1; shift; repo=$1; shift
  dir_exists "$dir" gitcmd "$dir" "$repo" status --short
}
export -f status
#
# Perform custom git command on target dependencies
#
gitcmd () {
  verbose 3 "gitcmd $*"
  dir=$1; shift; repo=$1; shift
  dir_not_exists "$dir" echo "does not exist locally"
  dep_operation "$dir" "$repo" ${_CONFIG_GITCMD} $*
}
export -f gitcmd

[[ "${_FAKE}" = true ]] && _CONFIG_GITCMD="echo ${_CONFIG_GITCMD}"
[[ ${#_USER_DEPS} = "0" ]] && _USER_DEPS=( "${___DEPS[@]}" )
